DROP DATABASE IF EXISTS spotifyDB;
CREATE DATABASE IF NOT EXISTS spotifyDB;
USE spotifyDB;
CREATE TABLE IF NOT EXISTS song(
	song_id INT AUTO_INCREMENT NOT NULL,
	title VARCHAR(50) NOT NULL,
	f_name VARCHAR(100) NOT NULL,
    l_name VARCHAR(100) NOT NULL,
	duration TIME NOT NULL,
	genre VARCHAR(50) NOT NULL,
	explicit BOOL NULL DEFAULT 0,
	link VARCHAR(255) NOT NULL, 
    PRIMARY KEY(song_id), 
    FOREIGN KEY(song_id) REFERENCES fav_songs (song_id) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY(song_id) REFERENCES playlist(song_id) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY(f_name, l_name) REFERENCES artist(f_name, l_name) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS artist(
	artist_id INT AUTO_INCREMENT NOT NULL,
	f_name VARCHAR(100) NOT NULL,
    l_name VARCHAR(100) NOT NULL, 
    dob DATE NOT NULL, 
    PRIMARY KEY(artist_id),
    FOREIGN KEY(artist_id) REFERENCES fav_songs(artist_id) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY(artist_id) REFERENCES playlist(artist_id) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY(f_name, l_name) REFERENCES song(f_name, l_name) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS genre(
	genre_id INT AUTO_INCREMENT NOT NULL,
    song_id INT AUTO_INCREMENT NOT NULL,
	name VARCHAR(50) NOT NULL, 
    PRIMARY KEY(genre_id),
    FOREIGN KEY(song_id) REFERENCES song(song_id) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS user(
	user_id INT AUTO_INCREMENT NOT NULL, 
    email VARCHAR(255) UNIQUE NOT NULL,
    username VARCHAR(50) NOT NULL,
    f_name VARCHAR(100) NOT NULL,
    l_name VARCHAR(100) NOT NULL,
    password VARCHAR(100) NOT NULL,
    PRIMARY KEY(user_id, email),
    FOREIGN KEY(user_id) REFERENCES fav_songs ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY(user_id) REFERENCES playlist ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS fav_songs(
	fav_song_id INT AUTO_INCREMENT NOT NULL,
    song_id INT(10) NOT NULL,
    artist_id INT(10) NOT NULL,
    user_id INT(10) NOT NULL,
    PRIMARY KEY(fav_song_id),
    FOREIGN KEY(song_id) REFERENCES song(song_id) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY(artist_id) REFERENCES artist(artist_id) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY(user_id) REFERENCES user(user_id) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS playlist(
	playlist_id INT AUTO_INCREMENT NOT NULL,
    song_id INT(10) NOT NULL,
    artist_id INT(10) NOT NULL,
    user_id INT(10) NOT NULL,
    PRIMARY KEY(playlist_id),
    FOREIGN KEY(song_id) REFERENCES song(song_id) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY(artist_id) REFERENCES artist(artist_id) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY(user_id) REFERENCES user(user_id) ON UPDATE CASCADE ON DELETE CASCADE
);